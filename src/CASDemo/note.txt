1.JUC:并发与并行的区别？
2.volatile是java Jvm提供的轻量级的同步机制（保证可见性，不保证原子性，禁止指令重排）原子性：保证数据的完整性（知否能保证最终一致性）
3.JMM (java内存模型)它描述的是一组规则或规范（线程间的通信必须在主内存中）
4.如何解决volatile的原子性？
单线程情况下不用担心指令重排的问题，只有在多线程的情况下才考虑（由于编译器有优化重排的存在，两个线程中使用的变量能否保证一致是无法确定的）
volatile实现禁止指令重排的优化，从而避免了多线程的情况下出现乱序执行的现象

问题 ：CAS--->UnSafe---->CAS底层思想--->ABA --->原子引用更新
5.CAS(CompareAndSwap):比较当前工作中的值和主内存中的值是否相同，如果相同执行操作，否则继续比较直到主内存中的值和工作内存中的值一致
6.CAS 缺点：
6.1.循环时间长，对cpu的开销很大
6.2.ABA问题：线程a将主内存中的值修改了之后再将主内存中的值修改回去，线程b以为自己的工作内存中值和主内存中的值一样就可以对其修改。
